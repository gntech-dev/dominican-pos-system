// This is your Prisma schema file for Dominican Republic POS System
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Management Models
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  firstName String
  lastName  String
  role      UserRole @default(CASHIER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  sales     Sale[]
  auditLogs AuditLog[]

  @@map("users")
}

enum UserRole {
  ADMIN
  MANAGER
  CASHIER
}

// Customer Management
model Customer {
  id          String  @id @default(cuid())
  name        String
  email       String?
  phone       String?
  rnc         String? // RNC for business customers (9 or 11 digits)
  cedula      String? // Cedula for individual customers
  address     String?
  city        String?
  isActive    Boolean @default(true)
  customerType CustomerType @default(INDIVIDUAL)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  sales Sale[]

  @@unique([rnc])
  @@unique([cedula])
  @@map("customers")
}

enum CustomerType {
  INDIVIDUAL  // Persona física
  BUSINESS    // Persona jurídica
}

// RNC Database for validation
model RncRegistry {
  id        String   @id @default(cuid())
  rnc       String   @unique
  name      String
  status    String
  category  String?
  lastSync  DateTime @default(now())

  @@index([rnc])
  @@map("rnc_registry")
}

// NCF Management for DGII Compliance
model NcfSequence {
  id            String  @id @default(cuid())
  type          NcfType
  currentNumber Int     @default(0)
  maxNumber     Int     @default(99999999)
  isActive      Boolean @default(true)
  expiryDate    DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  sales Sale[]

  @@unique([type])
  @@map("ncf_sequences")
}

enum NcfType {
  B01 // Facturas de Crédito Fiscal
  B02 // Facturas de Consumo
  B03 // Notas de Débito
  B04 // Notas de Crédito
  B11 // Proveedores Informales
  B12 // Registro Único
  B13 // Consumidor Final
  B14 // Regímenes Especiales
  B15 // Gubernamental
}

// Product Management
model Category {
  id          String    @id @default(cuid())
  name        String
  description String?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  products Product[]

  @@map("categories")
}

model Product {
  id          String    @id @default(cuid())
  code        String    @unique
  name        String
  description String?
  price       Decimal   @db.Decimal(10, 2)
  cost        Decimal?  @db.Decimal(10, 2)
  stock       Int       @default(0)
  minStock    Int       @default(0)
  isActive    Boolean   @default(true)
  taxable     Boolean   @default(true) // Subject to ITBIS (18%)
  categoryId  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  category  Category?   @relation(fields: [categoryId], references: [id])
  saleItems SaleItem[]

  @@map("products")
}

// Sales Management
model Sale {
  id           String     @id @default(cuid())
  saleNumber   String     @unique
  ncf          String?    @unique // Generated NCF
  ncfType      NcfType?
  subtotal     Decimal    @db.Decimal(10, 2)
  itbis        Decimal    @db.Decimal(10, 2) // 18% tax
  total        Decimal    @db.Decimal(10, 2)
  paymentMethod PaymentMethod @default(CASH)
  status       SaleStatus @default(COMPLETED)
  notes        String?
  cashierId    String
  customerId   String?
  ncfSequenceId String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Relations
  cashier     User         @relation(fields: [cashierId], references: [id])
  customer    Customer?    @relation(fields: [customerId], references: [id])
  ncfSequence NcfSequence? @relation(fields: [ncfSequenceId], references: [id])
  items       SaleItem[]

  @@map("sales")
}

enum PaymentMethod {
  CASH
  CARD
  TRANSFER
  CHECK
  CREDIT
}

enum SaleStatus {
  PENDING
  COMPLETED
  CANCELLED
  REFUNDED
}

model SaleItem {
  id        String  @id @default(cuid())
  quantity  Int
  unitPrice Decimal @db.Decimal(10, 2)
  total     Decimal @db.Decimal(10, 2)
  saleId    String
  productId String
  createdAt DateTime @default(now())

  // Relations
  sale    Sale    @relation(fields: [saleId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@map("sale_items")
}

// Audit Trail for DGII Compliance
model AuditLog {
  id        String     @id @default(cuid())
  action    AuditAction
  entityType String
  entityId   String
  oldValue   Json?
  newValue   Json?
  userId     String
  ipAddress  String?
  userAgent  String?
  timestamp  DateTime   @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("audit_logs")
}

enum AuditAction {
  CREATE
  UPDATE
  DELETE
  LOGIN
  LOGOUT
  SALE_CREATE
  SALE_CANCEL
  NCF_GENERATE
}

// Configuration for system settings
model SystemConfig {
  id    String @id @default(cuid())
  key   String @unique
  value String
  description String?
  updatedAt DateTime @updatedAt

  @@map("system_config")
}

// Business Settings for Receipt/Invoice Information
model BusinessSettings {
  id          String   @id @default(cuid())
  name        String   // Business name
  rnc         String   // Business RNC
  address     String   // Business address
  phone       String   // Business phone
  email       String   // Business email
  website     String?  // Business website (optional)
  logo        String?  // Logo file path/URL (optional)
  
  // Additional business info
  slogan      String?  // Business slogan/tagline
  city        String   // City
  province    String   // Province/State
  country     String   @default("República Dominicana")
  postalCode  String?  // Postal code
  
  // Tax and legal info
  taxRegime   String   @default("Régimen Ordinario") // Tax regime type
  economicActivity String? // Economic activity description
  
  // Receipt/Invoice settings
  receiptFooter    String? // Custom footer message for receipts
  invoiceTerms     String? // Terms and conditions for invoices
  warrantyInfo     String? // Warranty information
  
  // System settings
  isActive    Boolean  @default(true)
  isDefault   Boolean  @default(false) // Only one can be default
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("business_settings")
}
